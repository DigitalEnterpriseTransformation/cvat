# Generated by Django 4.2.13 on 2024-08-08 19:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("engine", "0082_job_parent_job_id_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConsensusSettings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("agreement_score_threshold", models.FloatField(default=0)),
                ("quorum", models.IntegerField(default=-1)),
                ("iou_threshold", models.FloatField(default=0.5)),
                ("sigma", models.FloatField(default=0.1)),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consensus_settings",
                        to="engine.task",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConsensusReport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("target_last_updated", models.DateTimeField()),
                ("consensus_score", models.IntegerField()),
                ("data", models.JSONField()),
                (
                    "assignee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="consensus",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consensus_reports",
                        to="engine.job",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consensus_reports",
                        to="engine.task",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConsensusConflict",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("frame", models.PositiveIntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("no_matching_item", "NoMatchingItemError"),
                            ("failed_attribute_voting", "FailedAttrVotingError"),
                            ("no_matching_annotation", "NoMatchingAnnError"),
                            ("annotation_too_close", "AnnotationsTooCloseError"),
                            ("wrong_group", "WrongGroupError"),
                            ("failed_label_voting", "FailedLabelVotingError"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conflicts",
                        to="consensus.consensusreport",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnnotationId",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("obj_id", models.PositiveIntegerField()),
                ("job_id", models.PositiveIntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[("tag", "TAG"), ("shape", "SHAPE"), ("track", "TRACK")],
                        max_length=32,
                    ),
                ),
                (
                    "shape_type",
                    models.CharField(
                        choices=[
                            ("rectangle", "RECTANGLE"),
                            ("polygon", "POLYGON"),
                            ("polyline", "POLYLINE"),
                            ("points", "POINTS"),
                            ("ellipse", "ELLIPSE"),
                            ("cuboid", "CUBOID"),
                            ("mask", "MASK"),
                            ("skeleton", "SKELETON"),
                        ],
                        default=None,
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "conflict",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotation_ids",
                        to="consensus.consensusconflict",
                    ),
                ),
            ],
        ),
    ]
